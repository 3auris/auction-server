version: '3.7'

networks:
  traefik:
    name: traefik-proxy
    driver: overlay
  monitoring:
    name: monitoring-network
    driver: overlay

configs:
  traefik-config:
    file: ./traefik.toml
  grafana-config:
    file: ./grafana.ini

volumes:
  traefik-logs: {}
  prometheus-data: {}
  grafana-data: {}
  grafana-profisioning-data: {}

services:
  reverse-proxy:
    image: traefik:v2.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-logs:/log
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
    configs:
      - source: traefik-config
        target: ./traefik.toml
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 8080
        published: 8080
        mode: host
    networks:
      - traefik
      - monitoring

  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.external-url=http://localhost/prometheus'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    deploy:
      labels:
        - traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)
        - traefik.http.services.prometheus.loadbalancer.server.port=9090
      placement:
        constraints:
          - node.role==manager
    depends_on:
      - reverse-proxy

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-profisioning-data:/etc/grafana/provisioning/
    configs:
      - source: grafana-config
        target: /etc/grafana/grafana.ini
    command:
      - '--config=/etc/grafana/grafana.ini'
    networks:
      - monitoring
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana
    deploy:
      placement:
        constraints:
          - node.role==manager
      labels:
        - traefik.http.middlewares.grafana.stripprefix.prefixes=/grafana/,/grafana,/grafana/login,grafana
        - traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)
        - traefik.http.services.grafana.loadbalancer.server.port=3000
