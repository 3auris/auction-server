version:  2.1

image-build: &image-build
  machine: true
  working_directory: ~/auction
  steps:
    - checkout
    - attach_workspace:
        at: ~/auction
    - run:
        command: |
          docker build -t $USER/$NAME $DIR
          docker save $USER/$NAME > auction-img.tar
    - run: ls -la
    - run: pwd
    - persist_to_workspace:
        root: .
        paths: auction-img.tar

image-push: &image-push
  machine: true
  steps:
    - attach_workspace:
        at: ~/auction
    - run:
        command: |
          docker load < $NAME.tar
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
          docker push $USER/$NAME

jobs:
  tests:
    docker:
      - image: golang:latest
    steps:
      - checkout
      - run:
          command: |
            (cd microservices/account && go test ./...)
            (cd microservices/product && go test)

  build-product-image:
    environment:
      USER: 3auris
      NAME: auction-product
      DIR: microservices/product
    <<: *image-build

  build-account-image:
    environment:
      USER: 3auris
      NAME: auction-account
      DIR: microservices/account
    <<: *image-build

  push-product-image:
    environment:
      USER: 3auris
      NAME: auction-product
    <<: *image-push

  push-account-image:
    environment:
      USER: 3auris
      NAME: auction-account
    <<: *image-push

#  product-image:
#    docker:
#      - image: circleci/buildpack-deps:stretch
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run:
#          command: |
#            cd microservices/product
#            docker build -t 3auris/auction-product .
#            echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
#            docker push 3auris/auction-product
#  account-image:
#    docker:
#      - image: circleci/buildpack-deps:stretch
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run:
#          command: |
#            cd microservices/account
#            docker build -t 3auris/auction-account .
#            echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
#            docker push 3auris/auction-account
#  deploy:
#    docker:
#      - image: circleci/buildpack-deps:stretch
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run:
#          command: |
#            gpg --batch --no-tty --passphrase $KEY --decrypt ./cert/ca.pem.gpg > ./cert/ca.pem
#            gpg --batch --no-tty --passphrase $KEY --decrypt ./cert/key.pem.gpg > ./cert/key.pem
#            gpg --batch --no-tty --passphrase $KEY --decrypt ./cert/cert.pem.gpg > ./cert/cert.pem
#            docker --tlsverify --tlscert=./cert/cert.pem --tlskey=./cert/key.pem --tlscacert=./cert/ca.pem -H $HOST:$PORT stack rm auction
#            sleep 7 # sleep to wait for all networks to be removed.
#            docker --tlsverify --tlscert=./cert/cert.pem --tlskey=./cert/key.pem --tlscacert=./cert/ca.pem -H $HOST:$PORT stack up -c ./proxy/docker-compose.yml auction
#            docker --tlsverify --tlscert=./cert/cert.pem --tlskey=./cert/key.pem --tlscacert=./cert/ca.pem -H $HOST:$PORT stack up -c ./microservices/account/docker-compose.yml auction
#            docker --tlsverify --tlscert=./cert/cert.pem --tlskey=./cert/key.pem --tlscacert=./cert/ca.pem -H $HOST:$PORT stack up -c ./microservices/product/docker-compose.yml auction
workflows:
  version: 2.1
  build-deploy:
    jobs:
      - build-account-image
      - push-account-image:
          requires:
            - build-account-image

#    jobs:
#      - tests:
#          filters:
#            branches:
#              only: master
#      - account-image:
#          requires:
#            - tests
#      - product-image:
#          requires:
#            - tests
#      - deploy:
#          requires:
#            - account-image
#            - product-image